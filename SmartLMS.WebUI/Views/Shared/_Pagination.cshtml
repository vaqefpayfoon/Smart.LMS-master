@using SmartLMS.Domain.Resources
@{
    var maxPage = Math.Ceiling(Model.Count / 8M);
    if (maxPage > 5)
    {
        maxPage = 5;
    }
}
<div class="text-center" id="pagination-container">
    <ul class="pagination pagination-primary">

        <li>
            <a class="pagination-previous"
               @if (!Model.HasPrevious)
               {
                   <text> style="display: none" </text>
               } href="javascript:void(0);">
                @Html.Raw(Resource.PreviousPage)</a>
        </li>

        @for (var i = 1; i <= maxPage; i++)
        {
            <li class="@(i == 1 ? "active" : string.Empty)">
                <a href="javascript:void(0);" class="pagination-page">@i</a>
            </li>
        }
        <li>
            <a class="pagination-next" style="@(!Model.HasNext ? "display:none;" : string.Empty)" href="javascript:void(0);">@Html.Raw(Resource.NextPage)</a>
        </li>
    </ul>
</div>

<script id="pagination-template" type="text/x-handlebars-template">

    <ul class="pagination pagination-primary">
        {{#if hasPrevious}}
        <li><a class="pagination-previous" href="javascript:void(0);">@Html.Raw(Resource.PreviousPage)</a></li>
        {{/if}}
        {{#for minPage maxPage 1}}
        {{#equals this @@root.currentPage}}
        <li class="active">
            {{else}}
        <li>
            {{/equals}}
            <a href="javascript:void(0);" class="pagination-page">{{this}}</a>
        </li>
        {{/for}}
        {{#if hasNext}}
        <li><a class="pagination-next" href="javascript:void(0);">@Html.Raw(Resource.NextPage)</a></li>
        {{/if}}
    </ul>

</script>