@using SmartLMS.Domain.Resources
@model ClassViewModel

@{
    ViewBag.Title = Resource.ClassUpdatePageTitle;
}

<div class="panel panel-success">
    <div class="panel-heading">
        @Resource.ClassUpdatePageTitle
    </div>
    <div class="panel-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.Id)

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Order, new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Order, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Order, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.DeliveryDays, new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DeliveryDays, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.DeliveryDays, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.CourseId, new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.CourseId, ViewBag.Courses as SelectList, Resource.SelectCourse, new {@class = "form-control dropdownjs"})
                        @Html.ValidationMessageFor(model => model.CourseId, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Active, new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Active)
                            @Html.ValidationMessageFor(model => model.Active, "", new {@class = "text-danger"})
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.TeacherId, new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.TeacherId, ViewBag.Teachers as SelectList, Resource.SelectTeacher, new {@class = "form-control dropdownjs"})
                        @Html.ValidationMessageFor(model => model.TeacherId, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Content, new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Content, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Content, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ContentType, new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.ContentType, ViewBag.ContentTypes as SelectList, Resource.SelectContentType, new {@class = "form-control dropdownjs"})
                        @Html.ValidationMessageFor(model => model.ContentType, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button type="submit" class="btn btn-success btn-sm">
                            <i class="fa fa-save"></i>
                        </button>
                        <a href="@ViewBag.BackURL" class="btn btn-simple btn-sm btn-default">@Resource.BackButton</a>
                    </div>
                </div>
            </div>
        }
        <div class="form-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.Files, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    <div class="jumbotron jumbotron-upload">
                        <form action="@Url.Action("SaveSupportMaterial")" method="post" enctype="multipart/form-data" class="dropzone" id="dropzoneForm" style="background: none; border: none;">
                            @Html.HiddenFor(x => x.Id)
                            <div class="fallback">
                                <input name="file" type="file"/>
                                <input type="submit" value="@Resource.SendButton"/>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>
<div style="display: none" id="dz-template-preview">
    <div class="dz-preview dz-file-preview">
        <div class="dz-details">
            <div class="dz-filename">
                <span data-dz-name></span>
            </div>
            <div class="dz-size" data-dz-size></div>
            <img data-dz-thumbnail/>
        </div>
        <div class="dz-progress">
            <div class="progress progress-line-primary">
                <div class="dz-upload progress-bar" role="progressbar" aria-valuemin="0" aria-valuemax="100" data-dz-uploadprogress></div>
            </div>
        </div>
        <div class="dz-success-mark">
            <span>✔</span>
        </div>
        <div class="dz-error-mark">
            <span>✘</span>
        </div>
        <div class="dz-error-message">
            <span data-dz-errormessage></span>
        </div>
    </div>
</div>

@section styles {
    @Styles.Render("~/Content/dropzone/dropZoneStyles")
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/dropzone")
    <script>
        (function() {
            var $private = {};

            Dropzone.options.dropzoneForm = {
                init: function() {
                    this.on("removedfile",
                        function(data) {
                            var id = "";
                            if (data.xhr) {
                                var res = JSON.parse(data.xhr.response);
                                id = res.Message;
                            } else {
                                id = data.name;
                            }
                            $private.deleteSupporMaterial('@Model.Id.ToString()', id);
                        });

                    $private.loadSupportMaterial('@Model.Id.ToString()', this);
                },

                previewTemplate: $("#dz-template-preview").html(),
                dictDefaultMessage: "@Resource.DragAndDropFileMessage",
                addRemoveLinks: true,
                dictRemoveFile: "@Resource.DeleteFileButton",
                dictCancelUpload: "@Resource.CancelFileButton"
            };

            $private.deleteSupporMaterial = function(id, fileName) {
                $.ajax({
                    type: "POST",
                    url: SmartLMS.api + "Class/DeleteSupportMaterial",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: JSON.stringify({ id, fileName })
                });
            };

            $private.loadSupportMaterial = function(classId, dropzoneForm) {
                $.ajax({
                    type: "POST",
                    url: SmartLMS.api + "Class/ListSupportMaterial",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: JSON.stringify({ classId }),
                    success: function(data) {
                        $.each(data.Files,
                            function(index, item) {
                                var file = {
                                    name: item.Name,
                                    size: item.Size,
                                    accepted: true,
                                    status: Dropzone.ADDED
                                };
                                dropzoneForm.emit("addedfile", file);
                                dropzoneForm.emit("complete", file);
                                dropzoneForm.files.push(file);
                            });
                    }
                });
            };
        }());
    </script>
}