@using SmartLMS.Domain.Entities
@using SmartLMS.Domain.Resources
@model LoginViewModel
@{
    ViewBag.Title = "Login";
    Layout = "~/Views/Authentication/_Layout.cshtml";
}


<div class="card card-signup">

    @using (Html.BeginForm("Login", "Authentication",
        new {ReturnUrl = Request.QueryString["ReturnUrl"]},
        FormMethod.Post,
        new {@class = "form", id = "login-form"}))
    {
        @Html.AntiForgeryToken()

        <div class="header header-primary text-center">
            <h2>@Parameter.APP_NAME</h2>
            <h4>ٌWelcome To ITest</h4>
        </div>
        <div class="content">
            <div class="input-group">
                <span class="input-group-addon">
                    <i class="material-icons">email</i>
                </span>
                <div class="form-group label-floating">
                    <label class="control-label">@Resource.LoginEmailLabel</label>
                    @Html.TextBoxFor(x => x.Login, new {@class = "form-control", id = "login-textbox"})
                </div>
            </div>
            <div class="input-group">
                <span class="input-group-addon">
                    <i class="material-icons">lock_outline</i>
                </span>
                <div class="form-group label-floating">
                    <label class="control-label">@Resource.LoginPasswordLabel</label>
                    @Html.EditorFor(x => x.Password, new {HtmlAttributes = new {id = "password-textbox"}})
                </div>
            </div>
            <div class="togglebutton text-center">
                <label>
                    @Html.CheckBoxFor(x => x.RememberMe, new {name = "remember", id = "remember"})
                    @Resource.RememberMeLabel
                </label>
            </div>


        </div>
        <div class="footer text-center">
            <button name="login-submit" id="login-submit" class="btn btn-simple btn-primary btn-lg">Login</button>
        </div>
        <div class="footer text-center">
            @Html.ActionLink(Resource.BackToHome, "Index", "Home", null, new {@class = "btn btn-simple btn-primary"})
        </div>
        <div id="ValidationSummaryContainer" class="container">

        </div>

        <div class="text-center">
            @Html.ActionLink(Resource.ForgotPasswordButton, "ForgotPassword", null, new {@class = "btn btn-simple forgot-password"})
        </div>
    }
</div>

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>


        (function() {
            var $private = {};

            $(function() {
                $("#login-form").on("submit", $private.Authenticate);
            });

            $private.Authenticate = function(e) {
                e.preventDefault();
                $.validator.unobtrusive.parse($(this));

                if ($(this).valid()) {
                    var sendOriginalText = $("#login-submit").text();
                    var sending =
                        $(
                            "<div class=\"animated-spinner\">Loading...</div> <span>@Resource.Authenticating</span>");
                    $("#login-submit").html(sending);
                    $("#login-submit").prop('disabled', true);
                    $.ajax({
                        url: this.action,
                        type: this.method,
                        data: $(this).serialize(),
                        success: function(result) {
                            if (result.Authenticated)
                                document.location.href = result.Url;
                            else {
                                $("#login-textbox").val("");
                                $("#password-textbox").val("");
                                $("#login-submit").text(sendOriginalText);
                                $("#login-submit").prop('disabled', false);
                                $("#ValidationSummaryContainer").html(result.ValidationSummary);
                            }
                        }
                    });
                }
            };
        }());
    </script>
}